2024/04/26　BookWormでのインストール手順 BookWorm 12.5で確認
*ユーサーの神山さまから解決方法を示唆いただきました。

-------------　仮想環境について　--------------
Pythonに関して、BookWormからは仮想環境がデフォルト導入された。
これに伴って、pipでのライブラリのインストールが従来通りできなくなりました。
基本はaptでインストールするのが基本らしいですが、aptに無い物はPipで入れていたのに...
どうすんのということで、

で方法としては、pipをやってみるとエラーメッセージとともに3つの方法が提示されています。
a.無理やり入れる ただし、システムを壊すかもよって文言があります。
b.仮想環境を使って入れる
c.pipxで入れる

a.の方法は簡単ですが、実際にシステムを壊す危険がある様です。
b.c.は両方仮想環境みたいですが、今後の事を考えるとb.の方法に慣れておくことが良い様です。
今後はこちらが標準になると思われます。


仮想環境venvで行う
・仮想環境と言ってもいろいろな方式がある様ですが、BookWormで標準となっているのが
 venvって方式らしい。


仮想環境の作り方 今回の仮想環境の名前はV_OLEDとします。
1. python3 -m venv V_tft177
   V_tft177が仮想環境の名前

2. 仮想環境の有効化
　　source V_tft177/bin/activate
   これで仮想環境V_tft177が有効になり、プロンプトが変わります。
　　(V_tft177) pi@raspberrypi:~/ $
   こんな感じ

3. 仮想環境から抜け出すのは
　　deactivate

4.　仮想環境を削除するには以下を実行。
　　rm -rf V_tft177

5. 仮想環境下でのライブラリのインストール
　　venv環境でのパッケージ管理はpipを使うのが一般的らしい。
　　仮想環境に入って普通にpipする
　　 pip install -U foge
　　-Uとすることで、すでに入っているパッケージのアップデートを行うことができます。

6. 仮想環境下でpythonプログラムの実行
　　・仮想環境を有効にする
　　・pythonプログラムのあるディレクトリに移動
　　・ ../V_tft177/bin/python hoge.py

7.注意
　　仮想環境は、ライブラリ的にはまっさらな状態です、OS標準のライブラリ以外は入ってない状態
　　なので、面倒ですが、必要なライブラリは1から入れる必要があります。



------- 以下　tft177 の仮想環境でのインストール手順


実行する前に"cd"コマンドでホームディレクトリに移動します。

#システム全体の更新
sudo apt update
sudo apt upgrade

aptで入るライブラリをインストールします
外部フォント関係のインストール
sudo apt-get install fonts-dejavu
sudo apt-get install fonts-ipafont


SPIを有効化
sudo raspi-config
にてSPIを有効にしてください。

プログラムをダウンロード
git clone https://github.com/momorara/tft177



仮想環境V_tft177を作る
$ python3 -m venv V_tft177

#アクティベート
$ source V_tft177/bin/activate

必要なライブラリをイントール
#pip
$ ./V_tft177/bin/python -m pip install --upgrade pip
$ ./V_tft177/bin/pip3 install adafruit-circuitpython-rgb-display
$ ./V_tft177/bin/pip3 install --upgrade adafruit-python-shell click

$ ./V_tft177/bin/pip install Pillow
$ ./V_tft177/bin/pip install numpy

# pip install gpiod

ここで、仮想環境V_tft177にはいり、cd tft177/として
python lcd177_0_re.py
を実行して下さい。
OSError: [Errno 16] Device or resource busy
と、エラーになると思います。

----・Busyエラーの対応 ----
Reassigning or Disabling the SPI Chip Enable Lines
https://learn.adafruit.com/circuitpython-on-raspberrypi-linux/spi-sensors-devices#reassigning-or-disabling-the-spi-chip-enable-lines-3097985

参考：Blinkaの詳細
https://learn.adafruit.com/circuitpython-on-raspberrypi-linux/installing-circuitpython-on-raspberry-pi
-------------------------
上記を読んでbusy対策をして下さい。

面倒な人は次を実行してください。(環境によりうまく行かない場合は、上記を確認のこと)
仮想環境に入って以下を実行
$ source V_tft177/bin/activate
cd ~
pip3 install --upgrade adafruit-python-shell
wget https://raw.githubusercontent.com/adafruit/Raspberry-Pi-Installer-Scripts/master/raspi-blinka.py
sudo -E env PATH=$PATH python3 raspi-blinka.py
リブート

$ source V_tft177/bin/activate
cd ~
pip3 install --upgrade adafruit-python-shell click
wget https://raw.githubusercontent.com/adafruit/Raspberry-Pi-Installer-Scripts/main/raspi-spi-reassign.py
sudo -E env PATH=$PATH python3 raspi-spi-reassign.py --ce0=disabled --ce1=disabled
リブート

設定は以上で終了です。
仮想環境に入り
$ source V_tft177/bin/activate
$ cd tft177/
$ python lcd177_0_re.py
で、液晶に文字が表示されれば成功です!

もしくは、仮想環境に入らずに
$ cd tft177/
$ ../V_tft177/bin/python lcd177_0_re.py


注) TFTへの表示ブログラムを途中度止めたり、エラーで止まった場合
　　digitalio.DigitalInOutがビジーになってしまう場合があります。
　　その場合は再度、リブートするか 　
　　sudo -E env PATH=$PATH python3 raspi-spi-reassign.py --ce0=disabled --ce1=disabled
　　を実行し、リブートして下さい。




